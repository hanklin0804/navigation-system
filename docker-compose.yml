services:
  nginx:
    image: nginx:alpine
    container_name: nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./frontend:/usr/share/nginx/html:ro
      - ./certbot/conf:/etc/letsencrypt               
    ports:
      - "80:80"
      - "443:443"  
    depends_on:
      - django-1
      - django-2
      - django-3
    networks:
      - backend-net

  django-1:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: django-1
    env_file: .env                         
    depends_on:
      - db
      - redis
    volumes:
      - ./backend:/app 
    ports:
      - "8001:8000"                   
    networks:
      - backend-net  

  django-2:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: django-2
    env_file: .env                         
    depends_on:
      - db
      - redis
    volumes:
      - ./backend:/app 
    ports:
      - "8002:8000"                   
    networks:
      - backend-net

  django-3:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: django-3
    env_file: .env                         
    depends_on:
      - db
      - redis
    volumes:
      - ./backend:/app                    
    ports:
      - "8003:8000"
    networks:
      - backend-net   
    
  db:
    image: postgis/postgis:15-3.3
    container_name: postgis-db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - db-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - backend-net

  redis:
    image: redis:7-alpine
    container_name: redis
    networks:
      - backend-net
    ports:
      - "6379:6379"

  osrm:
    image: osrm/osrm-backend
    container_name: osrm
    depends_on:
      - db    
    volumes:
      - ./osm_data/osrm_files:/data                
    command: osrm-routed --algorithm mld /data/${OSRM_MAP}.osrm
    ports:
      - "5000:5000"
    networks:
      - backend-net

  tile-server:
    image: overv/openstreetmap-tile-server
    container_name: tile-server
    depends_on:
      - db
    volumes:
      - osm-tile-data:/data/database    
      - ./osm_data/${OSRM_MAP}.osm.pbf:/data/region.osm.pbf:ro        
    command: run # 已在setup.sh import (OSM要先做import，否則run會crash)
    ports:
      - "8080:80"
    networks:
      - backend-net

volumes:
  db-data:
  # setup.sh 已先宣告osm-tile-data
  osm-tile-data:
    external: true

networks:
  backend-net:
